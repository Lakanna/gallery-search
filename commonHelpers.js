import{i as c,S as g}from"./assets/vendor-8c59ed88.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const l of o.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&n(l)}).observe(document,{childList:!0,subtree:!0});function a(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(e){if(e.ep)return;e.ep=!0;const o=a(e);fetch(e.href,o)}})();function m(r){return r.map(({comments:s,likes:a,downloads:n,views:e,largeImageURL:o,webformatURL:l,tags:p})=>`
        <li class="gallery-item">
          <a href="${o}" class="img-container">
             <img src="${l}" alt="${p}" />
          </a>
          <ul class="tags-list">
               <li class="tags-item">Comments:<span class="tags-item-span"> ${s}</span></li>
               <li class="tags-item">Likes:<span class="tags-item-span"> ${a}</span></li>
               <li class="tags-item">Views:<span class="tags-item-span"> ${e}</span> </li>
               <li class="tags-item">Downloads:<span class="tags-item-span"> ${n}</span></li>
          </ul>
        </li>`).join("")}const f="40437222-3b8e1aead0ae08f3118e12752",h="https://pixabay.com/api/";async function u(r="",s=1,a=20){const n=new URLSearchParams({key:f,q:r,image_type:"photo",orientation:"horizontal",safesearch:"true",page:s,per_page:a});return fetch(`${h}?${n}`).then(e=>{if(!e.ok)throw new Error(e.statusText);return e.json()})}const i={searchForm:document.querySelector(".js-form"),imageList:document.querySelector(".js-list"),loader:document.querySelector(".loader"),guadr:document.querySelector(".js-guard"),btnToTop:document.getElementById("back - to - up")};console.log(i.btnToTop);const t={q:"",page:1,per_page:15,maxPage:1},y={root:null,rootMargin:"300px"};let b=new IntersectionObserver(w,y);i.searchForm.addEventListener("submit",L);function L(r){if(r.preventDefault(),i.imageList.innerHTML="",t.q=r.currentTarget.elements.searchImg.value.trim(),t.q===""){c.show({message:"Please, input what are you searching!",color:"red",position:"topCenter"});return}i.loader.hidden=!1,u(t.q,t.page,t.per_page).then(({totalHits:s,hits:a})=>{a.length===0&&c.show({message:"Sorry, there are no images matching your search query. Please try again!",color:"red",position:"topCenter"}),i.imageList.insertAdjacentHTML("beforeend",m(a));let n=new g(".image-list a");t.maxPage=Math.ceil(s/t.per_page),console.log(t.maxPage),n.refresh(),t.maxPage>t.page&&b.observe(i.guadr)}).catch(d).finally(()=>{i.loader.hidden=!0,r.target.reset()})}function d(r){c.show({message:"Sorry, sometings going wrong. Please try again!",color:"red",position:"topCenter"}),console.log(r)}function w(r,s){r.forEach(a=>{a.isIntersecting&&(t.page+=1,u(t.q,t.page,t.per_page).then(({hits:n})=>{i.imageList.insertAdjacentHTML("beforeend",m(n)),new g(".image-list a"),t.page>=t.maxPage&&(s.unobserve(i.guadr),console.log("in if maxPage=page"))}).catch(d).finally(()=>{i.loader.hidden=!0}))})}window.onscroll=()=>{T()};function P(){window.scrollBy({top:heightOfElment*2,behavior:"smooth"})}function T(){document.body.scrollTop>20||document.documentElement.scrollTop>20?(document.getElementById("back-to-up").classList.remove("d-none"),document.getElementById("back-to-up").addEventListener("click",P)):document.getElementById("back-to-up").classList.add("d-none")}
//# sourceMappingURL=commonHelpers.js.map
